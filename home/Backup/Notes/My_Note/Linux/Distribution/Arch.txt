Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2011-11-02T14:27:33+08:00

====== Arch ======

#解决openjdk6中文字体显示问题
cd /usr/lib/jvm/java-6-openjdk/jre/lib
make fonts
make fonts/fallback
ln -s /usr/share/fonts/wenquanyi/wqy-microhei.ttc fonts/fallback/

$ sudo rc.d start|stop|restart|status daemons				#服务操作
$ pacman -S libv4l libdv libavc1394 aalib libcaca esound		#安装摄像头相关
$ pacman -S mutt libsasl						#mutt的安装
$ pacman -Qq > list							#备份
$ yaourt -Qmq								#查询aur上装的包
$ yaourt -S $(cat list)							#livecd到新电脑上分区后，恢复，最后调整下驱动，fstab，grub以及增加一个用户
#archlinux
$ pacman -Qdt								#列出无用的孤立的包
$ pacman -Scc								#清空cache
$ pacman -Rsn package							#删除包及其依赖包和相关配置文件
$ pacman -U package							#安装本地的包
$ pacman -Syu								#升级系统
$ pacman -S package							#从源中安装包及其依赖包
$ pacman -Sf package							#重新安装包
$ pacman -Ql package							#列出安装包目录
$ yaourt -S package							#从AUR安装软件包
$ yaourt -Ss password							#使用关键字搜索软件包
$ yaourt -Syu –aur							#从AUR升级本地软件数据库并安装更新
$ yaourt -Su –devel							#更新devel软件包
$ yaourt -Si package							#列出软件包信息
$ yaourt -Sc								#从缓存中清楚旧的软件包
$ yaourt -Su								#安装AUR中的更新软件包
$ yaourt -Sy								#获取最新的AUR软件包数据库
$ yaourt -Cd								#清楚AUR软件包数据库
$ yaourt -R package							#删除软件包
$ repo-add /path/to/repo.db.tar.gz /path/to/*.pkg.tar.xz
$ repo-add /path/to/repo.db.tar.gz /path/to/packagetoadd-1.0-1-i686.pkg.tar.gz

$ pacman -h  
用法:  pacman <操作> [...]  
操作:  
 pacman {-h --help}       //帮助  
 pacman {-V --version}   //查看版本  
 pacman {-D --database} <选项> <软件包>  //pacman管理数据库选项  
 pacman {-Q --query}    [选项] [软件包]    //查询安装包  
 pacman {-R --remove}   [选项] <软件包>  //删除安装包  
 pacman {-S --sync}     [选项] [软件包]      //安装安装包  
 pacman {-U --upgrade}  [选项] <文件>   //更新安装包  
 
 $ pacman -D --help  
用法:  pacman {-D --database} <选项> <软件包>  
选项:  
 --asdeps         标记为非单独指定安装的软件包  
 --asexplicit     标记为单独指定安装的软件包  
 --config <路径>  指定另外的配置文件  
 --logfile <路径> 指定另外的日志文件  
 --noconfirm      不询问确认  
 --noprogressbar  下载文件时不显示进度条  
 --noscriptlet    不执行安装小脚本  
 -v, --verbose        循环执行  
 -- debug        显示除错信息  
 -r, --root <路径>    指定另外的安装根目录  
 -b, --dbpath <路径>  指定另外的数据库位置  
 --cachedir <目录> 指定另外的软件包缓存位置  
 --arch <架构>    设定另外的架构  
 
 
 $ pacman -Q --help  
用法:  pacman {-Q --query} [选项] [软件包]  
选项:  
 -c, --changelog      查看某软件包的更新日志  
 -d, --deps           列出所有作为依赖关系安装的软件包 [过滤器]  
 -e, --explicit       列出所有单独指定安装的软件包 [过滤器]  
 -g, --groups         查看某软件包组所属的所有软件包  
 -i, --info           查看软件包信息 (-ii 查看备份文件)  
 -k, --check          检查该软件包拥有的文件是否存在  
 -l, --list           列出被查询软件包的内容  
 -m, --foreign        列出没有在同步数据库时找到的已安装软件包 [过滤器]  
 -o, --owns <文件>     查询哪个软件包拥有  <文件>  
 -p, --file <软件包> 从某个软件包而不是数据库查询  
 -s, --search <regex> 搜寻符合指定字符串的已安装本地的软件包  
 -t, --unrequired     列出所有不被其他软件包要求的软件包 [过滤器]  
 -u, --upgrades       列出所有可升级的软件包 [过滤器]  
 -q, --quiet          在查询或搜索时显示较少的信息  
 --config <路径>  指定另外的配置文件  
 --logfile <路径> 指定另外的日志文件  
 --noconfirm      不询问确认  
 --noprogressbar  下载文件时不显示进度条  
 --noscriptlet    不执行安装小脚本  
 -v, --verbose        循环执行  
 -- debug        显示除错信息  
 -r, --root <路径>    指定另外的安装根目录  
 -b, --dbpath <路径>  指定另外的数据库位置  
 --cachedir <目录> 指定另外的软件包缓存位置  
 --arch <架构>    设定另外的架构  
 
 $ pacman -R --help  
用法:  pacman {-R --remove} [选项] <软件包>  
选项:  
 -c, --cascade        删除软件包及所有的依赖于此的软件包  
 -d, --nodeps         略过依赖关系检查  
 -k, --dbonly         只删除数据库记录，不删除文件  
 -n, --nosave         同时删除配置文件  
 -s, --recursive      同时删除 (不会破坏其他软件包的) 依赖关系(-ss·也包括单独指定安装的依赖关系)  
 -u, --unneeded       同时删除不需要的 (且不会破坏其他软件包的) 依赖关系  
 --print          仅打印目标而不执行操作  
 --print-format <字符串>指定如何打印目标  
 --config <路径>  指定另外的配置文件  
 --logfile <路径> 指定另外的日志文件  
 --noconfirm      不询问确认  
 --noprogressbar  下载文件时不显示进度条  
 --noscriptlet    不执行安装小脚本  
 -v, --verbose        循环执行  
 -- debug        显示除错信息  
 -r, --root <路径>    指定另外的安装根目录  
 -b, --dbpath <路径>  指定另外的数据库位置  
 --cachedir <目录> 指定另外的软件包缓存位置  
 --arch <架构>    设定另外的架构  
 
 $ pacman -S --help  
用法:  pacman {-S --sync} [选项] [软件包]  
选项:  
 --asdeps         作为非单独指定安装的软件包安装  
 --asexplicit     作为单独指定安装的软件包安装  
 -c, --clean          从缓存目录中删除旧软件包 (-cc 清除所有)  
 -d, --nodeps         略过依赖关系检查  
 -f,  -force          强制安装，覆盖存在冲突的文件  
 -g, --groups         查看某软件包组所属的所有软件包  
 -i, --info           查看软件包信息  
 -l, --list <软件库>    查看在该软件库中的软件包清单  
 -s, --search <regex表达式> 按照指定字符串查询远端软件库  
 -u, --sysupgrade     升级所有已安装的软件包 (-uu 可启用降级)  
 -w, --downloadonly   下载但不安装/升级软件包  
 -y, --refresh        从服务器下载新的软件包数据库  
 --needed         不重新安装已经为最新的软件包  
 --ignore <软件包>   升级时忽略某个软件包 (可多次使用)  
 --ignoregroup <软件包组>升级时忽略某个软件包组 (可多次使用)  
 --print          仅打印目标而不执行操作  
 --print-format <字符串>指定如何打印目标  
 -q, --quiet          在查询或搜索时显示较少的信息  
 --config <路径>  指定另外的配置文件  
 --logfile <路径> 指定另外的日志文件  
 --noconfirm      不询问确认  
 --noprogressbar  下载文件时不显示进度条  
 --noscriptlet    不执行安装小脚本  
 -v, --verbose        循环执行  
 -- debug        显示除错信息  
 -r, --root <路径>    指定另外的安装根目录  
 -b, --dbpath <路径>  指定另外的数据库位置  
 --cachedir <目录> 指定另外的软件包缓存位置  
 --arch <架构>    设定另外的架构
 
 $ pacman -U --help  
用法:  pacman {-U --upgrade} [选项] <文件>  
选项:  
 --asdeps         作为非单独指定安装的软件包安装  
 --asexplicit     作为单独指定安装的软件包安装  
 -d, --nodeps         略过依赖关系检查  
 -f,  -force          强制安装，覆盖存在冲突的文件  
 -k, --dbonly         添加数据库记录，不安装或保持现存文件  
 --print          仅打印目标而不执行操作  
 --print-format <字符串> 指定如何打印目标  
 --config <路径>  指定另外的配置文件  
 --logfile <路径> 指定另外的日志文件  
 --noconfirm      不询问确认  
 --noprogressbar  下载文件时不显示进度条  
 --noscriptlet    不执行安装小脚本  
 -v, --verbose        循环执行  
 -- debug        显示除错信息  
 -r, --root <路径>    指定另外的安装根目录  
 -b, --dbpath <路径>  指定另外的数据库位置  
 --cachedir <目录> 指定另外的软件包缓存位置  
 --arch <架构>    设定另外的架构


